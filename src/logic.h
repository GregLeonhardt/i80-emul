/*******************************  COPYRIGHT  ********************************/
/*
 *  Author? "Gregory N. Leonhardt"
 *  License? "CC BY-NC 2.0"
 *           "https://creativecommons.org/licenses/by-nc/2.0/"
 *
 ****************************************************************************/

#ifndef LOGIC_H
#define LOGIC_H

/******************************** JAVADOC ***********************************/
/**
 *  This file contains definitions (etc.) for the CPU registers.
 *
 *  @note
 *
 ****************************************************************************/

/****************************************************************************
 *  Compiler directives
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * System APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Application APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Definitions
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Enumerations
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Structures
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Storage Allocation
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Prototypes
 ****************************************************************************/

//------------------------------------------------------------------------ 157
void
logic_andr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 157
void
logic_andn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 157
void
logic_andhl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 159
void
logic_orr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 159
void
logic_orn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 159
void
logic_orhl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 161
void
logic_xorr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 161
void
logic_xorn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 161
void
logic_xorhl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 163
void
logic_cpr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 163
void
logic_cpn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 163
void
logic_cphl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 141
void
logic_cpd_ED(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 142
void
logic_cpdr_ED(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 138
void
logic_cpi_ED(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 139
void
logic_cpir_ED(
    uint8_t                     op_code
    );
//----------------------------------------------------------------------------
int
logic_post(
    void
    );
//----------------------------------------------------------------------------

/****************************************************************************/

#endif                      //    LOGIC_H