/*******************************  COPYRIGHT  ********************************/
/*
 *  Author? "Gregory N. Leonhardt"
 *  License? "CC BY-NC 2.0"
 *           "https://creativecommons.org/licenses/by-nc/2.0/"
 *
 ****************************************************************************/

#ifndef MATH_H
#define MATH_H

/******************************** JAVADOC ***********************************/
/**
 *  This file contains definitions (etc.) for the CPU registers.
 *
 *  @note
 *
 ****************************************************************************/

/****************************************************************************
 *  Compiler directives
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * System APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Application APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Definitions
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Enumerations
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Structures
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Storage Allocation
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Prototypes
 ****************************************************************************/

//------------------------------------------------------------------------ 145
void
math_addr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 147
void
math_addn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 148
void
math_addhl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 151
void
math_adcr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 151
void
math_adcn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 151
void
math_adchl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 145
void
math_subr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 147
void
math_subn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 148
void
math_subhl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 151
void
math_sbcr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 151
void
math_sbcn_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 151
void
math_sbchl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 165
void
math_incr_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 167
void
math_inchl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 170
void
math_decr_r80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 170
void
math_dechl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 173
void
math_daa_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 173
void
math_daa_z80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 175
void
math_cpl_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 178
void
math_ccf_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 179
void
math_scf_i80(
    uint8_t                     op_code
    );
//------------------------------------------------------------------------ 176
void
math_neg_ED(
    uint8_t                     op_code
    );
//----------------------------------------------------------------------------
int
math_post(
    void
    );
//----------------------------------------------------------------------------

/****************************************************************************/

#endif                      //    ADD_H