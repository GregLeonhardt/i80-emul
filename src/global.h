/*******************************  COPYRIGHT  ********************************/
/*
 *  Author? "Gregory N. Leonhardt"
 *  License? "CC BY-NC 2.0"
 *           "https://creativecommons.org/licenses/by-nc/2.0/"
 *
 ****************************************************************************/

#ifndef GLOBAL_H
#define GLOBAL_H

/******************************** JAVADOC ***********************************/
/**
 *  This file contains definitions (etc.) for the CPU registers.
 *
 *  @note
 *
 ****************************************************************************/

/****************************************************************************
 *  Compiler directives
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * System APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Application APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Definitions
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Enumerations
 ****************************************************************************/

//----------------------------------------------------------------------------
/**
 *  @param  CPU_e               CPU TYPE                                    */
enum    CPU_e
{
    CPU_INVALID             = 0,                //  Invalid
    CPU_I80                 = 1,                //  Intel 8080
    CPU_Z80                 = 2                 //  Zilog Z80
};
//----------------------------------------------------------------------------

/****************************************************************************
 * Structures
 ****************************************************************************/

//----------------------------------------------------------------------------
/**
 *  @param  operation_rc_t      Operation execution data                    */
struct  operation_rc_t
{
    /**
     *  @param  states        Number of clock states                        */
    int                         states;
}   operation_rc;
//----------------------------------------------------------------------------

/****************************************************************************
 * Storage Allocation
 ****************************************************************************/

//----------------------------------------------------------------------------
//      Runtime Mode
/**
 *  @param  RTM                                                             */
enum    CPU_e               CPU;
//----------------------------------------------------------------------------

/****************************************************************************
 * Prototypes
 ****************************************************************************/

//----------------------------------------------------------------------------
int
parity_8(
    uint8_t                     data_byte
    );
//----------------------------------------------------------------------------
int
is_ccc(
    uint8_t                     op_code
    );
//----------------------------------------------------------------------------
int
is_cc(
    uint8_t                     op_code
    );
//----------------------------------------------------------------------------
void
push(
    uint16_t                    data
    );
//----------------------------------------------------------------------------
uint16_t
pop(
    void
    );
//----------------------------------------------------------------------------

/****************************************************************************/

#endif                      //    GLOBAL_H